#!/bin/sh -e

#DEBHELPER#

# Source debconf library.
. /usr/share/debconf/confmodule


if [ "$1" = "configure" ]
then
    ENVIRONMENTNAME=communicatord
    PACKAGENAME=communicatord
    USERNAME=communicatord
    GROUPNAME=communicatord

    # Create a default user editable snapmanager.conf file if it does not
    # exist yet
    #
    COMMUNICATORD_USER_CONFIGURATION_FILE=/etc/${ENVIRONMENTNAME}/${ENVIRONMENTNAME}.d/${PACKAGENAME}.conf
    if test ! -f $COMMUNICATORD_USER_CONFIGURATION_FILE
    then
        # When first installing, we do not have the public IP address
        # (okay, we do, but we cannot be sure which one is right because
        # the user may have a weird network setup...) so instead we create
        # a default file if it does not already exist and put some info
        # to make it a bit easier to deal with the matter
        #
        echo "# Various variables that you are likely to need to edit for communicatord" >$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "# to communicate remotely for more info and details about the variables" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "# defined here, check the file of the same name one directory up" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "#" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "# In most cases, if your hostname is properly defined, server_name" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "# does not need to be changed." >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "#" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "# The my_address and listen variables should be set to the public" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "# IP address of this computer (from eth0 or tun0)." >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "#" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "#server_name=" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "#my_address=" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
        echo "#listen=" >>$COMMUNICATORD_USER_CONFIGURATION_FILE
    fi

    # Create the logfile because the communicatord user may have
    # difficulties with it otherwise during logrotate.
    #
    LOGDIR=/var/log/${PACKAGENAME}
    LOGFILE=${LOGDIR}/${PACKAGENAME}.log
    mkdir -p ${LOGDIR}
    touch ${LOGFILE}
    chown ${USERNAME}:${GROUPNAME} ${LOGFILE}
    chmod 640 ${LOGFILE}

    SECURELOGDIR=${LOGDIR}/secure
    SECURELOGFILE=${SECURELOGDIR}/${PACKAGENAME}.log
    mkdir -p ${SECURELOGDIR}
    touch ${SECURELOGFILE}
    chown ${USERNAME}:${GROUPNAME} ${SECURELOGFILE}
    chmod 640 ${SECURELOGFILE}

    # generate a private key and a certificate for remote communicator daemons
    # to connect using SSL; this key will work for 3650 days (about 10 years)
    #
    # here we fix the ownship of the directory (since it is not just
    # root:root, we cannot really do it in the rules)
    #
    SSLDIR=/etc/${ENVIRONMENTNAME}/ssl
    chown ${USERNAME}:${GROUPNAME} ${SSLDIR}
    if test ! -f ${SSLDIR}/${PACKAGENAME}.key \
         -o ! -f ${SSLDIR}/${PACKAGENAME}.crt
    then
        openssl req -newkey rsa:2048 \
           -nodes -keyout ${SSLDIR}/${PACKAGENAME}.key \
           -x509 -days 3650 -out ${SSLDIR}/${PACKAGENAME}.crt \
           -subj "/C=US/ST=California/L=Sacramento/O=Snap/OU=Website/CN=snap.website"
    fi

    # The username is created at installation time so we can't have these
    # command work at packaging time (in debian/rules)
    #
    chown ${USERNAME} /usr/bin/raise-flag
    chmod u+s /usr/bin/raise-flag
fi


# vim: ts=4 sw=4 et nocindent
