#!/bin/sh -e

#DEBHELPER#

# Source debconf libraries.
. /usr/share/debconf/confmodule
. /usr/lib/snaplogger/inst/manage-log-dirs
. /usr/lib/eventdispatcher/inst/manage-tls-keys


if [ "$1" = "configure" ]
then
    ENVIRONMENT_NAME=communicatord
    PACKAGE_NAME=communicatord
    USER_NAME=communicatord
    GROUP_NAME=communicatord
    SOCKET_GROUP=communicator-user

    # Add communicatord user to communicator-user group
    #
    adduser ${USER_NAME} ${SOCKET_GROUP}

    COMMUNICATORD_SECURE_CONFIGURATION_DIR=/etc/${ENVIRONMENT_NAME}/${ENVIRONMENT_NAME}.d

    # Create a default user editable communicatord.conf file if it does not
    # exist yet
    #
    COMMUNICATORD_SECURE_CONFIGURATION_FILE=${COMMUNICATORD_SECURE_CONFIGURATION_DIR}/35-${PACKAGE_NAME}.conf
    if test ! -f ${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
    then
        # When first installing, we do not have the public IP address
        # (okay, we do, but we cannot be sure which one is right because
        # the user may have a weird network setup...) so instead we create
        # a default file if it does not already exist and put some info
        # to make it a bit easier to deal with the matter
        #
        echo "# Secure variables to define in a secure configuration file" >${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
        echo "#" >>${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
        echo "# See /etc/communicatord/communicatord.conf for documentation" >>${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
        echo "#" >>${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
        echo "#secure_listen=" >>${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
        echo "#signal_secret=" >>${COMMUNICATORD_SECURE_CONFIGURATION_FILE}

        chmod 0700 ${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
        chown "${USER_NAME}":"${GROUP_NAME}" ${COMMUNICATORD_SECURE_CONFIGURATION_FILE}
    fi

    COMMUNICATORD_USER_CONFIGURATION_FILE=${COMMUNICATORD_SECURE_CONFIGURATION_DIR}/50-${PACKAGE_NAME}.conf
    if test ! -f ${COMMUNICATORD_USER_CONFIGURATION_FILE}
    then
        # When first installing, we do not have the public IP address
        # (okay, we do, but we cannot be sure which one is right because
        # the user may have a weird network setup...) so instead we create
        # a default file if it does not already exist and put some info
        # to make it a bit easier to deal with the matter
        #
        echo "# Various variables that you are likely to need to edit for communicatord" >${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "# to communicate remotely for more info and details about the variables" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "# defined here, check the file of the same name one directory up" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "#" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "# In most cases, if your hostname is properly defined, server_name" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "# does not need to be changed." >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "#" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "# The my_address and listen variables should be set to the public" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "# IP address of this computer (from eth0 or tun0)." >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "#" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "#server_name=" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "#my_address=" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
        echo "#listen=" >>${COMMUNICATORD_USER_CONFIGURATION_FILE}
    fi

    # Create the logfile because the communicatord user may have
    # difficulties with it otherwise during logrotate.
    #
    create_log_dirs ${ENVIRONMENT_NAME} ${PACKAGE_NAME} ${USER_NAME} ${GROUP_NAME} true

    # generate a private key and a certificate for remote communicator daemons
    # to connect using TLS; this key will work for 3650 days (about 10 years)
    #
    create_tls_keys ${ENVIRONMENT_NAME} ${PACKAGE_NAME} ${USER_NAME} ${GROUP_NAME}

    # The user is created at installation time so we CANNOT have this
    # command work at packaging time (in debian/rules)
    #
    RAISE_FLAG=/usr/bin/raise-flag
    chown ${USER_NAME} ${RAISE_FLAG}
    chmod ug+s-w ${RAISE_FLAG}
fi


# vim: ts=4 sw=4 et nocindent
